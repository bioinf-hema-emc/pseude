getwd()
setwd('git_projects/pseude')
library(DESeq2)
load('data/GSE124872_raw_counts_single_cell.RData')
load('data/test_agglink.rda')
load_all()
library(devtools)
load_all()
getwd()
load_all()
load_all()
agg_counts <- scaggregate(raw_counts, agg_dt)
agg_counts
str(agg_counts)
agg_dt
annot_table <- unique(agg_dt[order(sample_name)])
annot_table
agg_tell <- 1
if (class(agg_tell) == "character") {
annot_cols <- colnames(agg_dt)[colnames(agg_dt) != agg_tell]
} else {
annot_cols <- colnames(agg_dt)[-agg_tell]
}
annot_table <- unique(agg_dt[order(sample_name), ..annot_cols])
annot_table
a
design <- as.formula("~state")
dds <- DESeqDataSetFromMatrix(agg_counts, colData = annotation_table, design = design)
dds <- DESeqDataSetFromMatrix(agg_counts, colData = annot_table, design = design)
dds
colData(dds)
colData(dds)$state
colData(dds)[, "state"]
is.element(colData(dds)[, "state"], c("old", "young"))
?split
?strsplit
dds
design(dds)
as.character(design(dds))
as.character(design(dds))[2]
?DESeq2::fpm
?dds
document()
document()
load_all()
dds
scout(dds)
?colData
annot_table
annot_table[, "state"]
annot_table[, state]
annot_table[, "state"] == "old"
c(annot_table[, "state"] == "old")
data.frame(annot_table)
tannot_table <- data.frame(annot_table)
c(tannot_table[, "state"] == "old")
tannot_table[, "state"] == "old"
identical(c(tannot_table[, "state"] == "old"), tannot_table[, "state"] == "old")
document()
load_all()
scout(dds, annot_table)
scout(dds, tannot_table)
rm(tannot_table)
dds
?DESeq
?DESeq2::lfcShrink
?DESeq2::rlog
document()
load_all()
document()
load_all()
dds <- scdeseq(agg_counts, annot_table)
dds
metadata(dds)
results(dds)
usethis::use_package("openxlsx")
res <- DESeq2::lfcShrink(dds, contrast = spl_com, type = "ashr", quiet = TRUE)
res <- DESeq2::lfcShrink(dds, contrast = strsplit("state,young,old")[[1]], type = "ashr", quiet = TRUE)
res <- DESeq2::lfcShrink(dds, contrast = strsplit("state,young,old", split = ",")[[1]], type = "ashr", quiet = TRUE)
res
norm_counts <- DESeq2::counts(dds, normalized = TRUE)
norm_counts
# Compute normalized counts
norm_counts <- data.table(DESeq2::counts(dds, normalized = TRUE))
# Compute normalized counts
norm_counts <- data.table::data.table(DESeq2::counts(dds, normalized = TRUE))
norm_counts
res
as.data.table(res)
data.table::as.data.table(res)
?data.table::as.data.table()
data.table::setDT(res)
tnorm_counts <- data.table::as.data.table(DESeq2::counts(dds, normalized = TRUE))
tnorm_counts
norm_counts
identical(norm_counts, tnorm_counts)
data.table::as.data.table(res)
data.table::as.data.table(res, keep.rownames = TRUE)
suppressWarnings(data.table::as.data.table(res, keep.rownames = TRUE))
# Compute normalized counts
norm_counts <- asdt(DESeq2::counts(dds, normalized = TRUE))
tnorm_counts <- data.table::as.data.table(DESeq2::counts(dds, normalized = TRUE))
tnorm_counts
res
tres <- suppressWarnings(data.table::as.data.table(res, keep.rownames = TRUE))
tres
out_res <- cbind(tres, tnorm_counts)
out_res
data.table::setnames(out_res, 'gene')
colnames(out_res)
data.table::setorder(out_res, padj)
out_res
res
na.omit(res)
out_sign <- out_res[padj < 0.05, ]
out_sing
out_sign
out_sign <- na.omit(out_res[padj < 0.05, ])
out_sign
?openxlsx::addWorksheet
?openxlsx::writeDataTable
?openxlsx::createWorkbook
openxlsx::createStyle
?openxlsx::createStyle
out_res
out_res[, rn:padj]
document()
load_all()
scout(dds)
res <- DESeq2::lfcShrink(dds, contrast = strsplit("state,young,old", split = ",")[[1]], type = "ashr", quiet = TRUE)
res
res <- data.table::as.data.table(DESeq2::lfcShrink(dds, contrast = strsplit("state,young,old", split = ",")[[1]], type = "ashr", quiet = TRUE))
res
res <- data.table::as.data.table(DESeq2::lfcShrink(dds, contrast = strsplit("state,young,old", split = ",")[[1]], type = "ashr", quiet = TRUE), keep.rownames = TRUE)
res
dim(res)
asdt <- function(x, keep.rownames = FALSE, ...) {
data.table::as.data.table(x, keep.rownames = FALSE, ...)
}
# Compute normalized counts
norm_counts <- asdt(DESeq2::counts(dds, normalized = TRUE))
norm_counts
dim(norm_counts)
rownames(dds)
document()
load_all()
scout(dds)
document()
load_all()
scout(dds)
out_res
out_res[, 1:6]
document()
load_all()
scout(dds)
xlsx_style <- openxlsx::createStyle(numFmt = "SCIENTIFIC",
borderColour = "#4F80BD",
borderStyle = "medium")
xlsx_style
document()
load_all()
scout(dds)
out_res["padj" < 0.05]
out_res[padj < 0.05]
out_res[("padj") < 0.05]
out_res[(c"padj") < 0.05]
out_res[c("padj") < 0.05]
out_res[out_res$padj < 0.05]
find("na.omit")
document()
load_all()
scout(dds)
use_package("DESeq2")
document()
load_all()
use_data(raw_counts)
agg_dt
raw_annotation <- agg_dt
use_data(raw_annotation)
raw_counts
raw_annotation
document()
load_all()
agg_counts
use_data(agg_counts)
annot_table
agg_table <- annot_table
use_data(agg_table)
dds
results(dds)
agg_dds <- dds
use_data(agg_data)
use_data(agg_dds)
agg_counts
colnames(agg_counts)
raw_table <- raw_annotation
use_data(raw_table)
agg_table
agg_dds
str(agg_dds)
slots(agg_dds)
slotNames(agg_dds)
document()
load_all()
?scaggregate
example_agg <- scaggregate(sc_counts = raw_counts,
sc_table = raw_table,
sc_group = "sample_name")
example_agg
test()
test()
check()
use_package("Matrix.utils")
document()
load_all()
check()
find("as.formula")
find("na.omit")
document()
document()
load_all()
document()
getwd()
document()
load_all()
